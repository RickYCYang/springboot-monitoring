services:
  mysqldb:
    image: mysql:latest
    container_name: mysqldb
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: user_management
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '--password=1234',
        ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '3306:3306'
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - monitoring-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '9200:9200'
    networks:
      - monitoring-net

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.18
    container_name: apm-server
    command:
      - -e
      - -E
      - apm-server.host=0.0.0.0:8200
      - -E
      - output.elasticsearch.hosts=["http://elasticsearch:9200"]
    ports:
      - '8200:8200'
    networks:
      - monitoring-net
    depends_on:
      - elasticsearch

  spring-app-elastic:
    build:
      context: .
      dockerfile: Dockerfile.elastic
    image: spring-app:elastic
    container_name: spring-app-elastic
    ports:
      - '8081:8080'
    environment:
      - ELASTIC_APM_SERVICE_NAME=spring-app-elastic
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      - ELASTIC_APM_ENVIRONMENT=production
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./elastic-apm-agent:/app/elastic-apm-agent
    networks:
      - monitoring-net
    depends_on:
      - apm-server

  spring-app-skywalking:
    build:
      context: .
      dockerfile: Dockerfile.skywalking
    image: spring-app:skywalking
    container_name: spring-app-skywalking
    ports:
      - '8082:8080'
    environment:
      - JAVA_OPTS=-javaagent:/app/skywalking-agent/skywalking-agent.jar -Dskywalking.agent.service_name=spring-app-skywalking -Dskywalking.collector.backend_service=skywalking-oap:11800 -Dskywalking_config=/app/skywalking-agent/config/agent.config.minimal
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - monitoring-net
    depends_on:
      - skywalking-oap

  spring-app-skywalking-provider:
    build:
      context: .
      dockerfile: Dockerfile.skywalking
    image: spring-app:skywalking
    container_name: spring-app-skywalking-provider
    ports:
      - '8083:8080'
    environment:
      - JAVA_OPTS=-javaagent:/app/skywalking-agent/skywalking-agent.jar -Dskywalking.agent.service_name=spring-app-skywalking-provider -Dskywalking.collector.backend_service=skywalking-oap:11800 -Dskywalking_config=/app/skywalking-agent/config/agent.config.minimal
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - monitoring-net
    depends_on:
      - skywalking-oap

  skywalking-ui:
    image: apache/skywalking-ui:10.1.0
    container_name: skywalking-ui
    restart: always
    ports:
      - '8080:8080'
    environment:
      - SW_OAP_ADDRESS=http://skywalking-oap:12800
    depends_on:
      - elasticsearch
      - skywalking-oap
    networks:
      - monitoring-net

  skywalking-oap:
    image: apache/skywalking-oap-server:10.1.0
    container_name: skywalking-oap
    environment:
      - SW_STORAGE=elasticsearch
      - SW_STORAGE_ES_CLUSTER_NODES=elasticsearch:9200
      # Disable JVM metrics collection (use Prometheus instead)
      - SW_RECEIVER_JVM=false
      # Disable meter system (use Prometheus instead)
      - SW_RECEIVER_METER=false
      # Keep trace receiver enabled for distributed tracing
      - SW_RECEIVER_TRACE=true
      # Keep profile receiver for performance analysis
      - SW_RECEIVER_PROFILE=true
      # Disable browser performance monitoring
      - SW_RECEIVER_BROWSER=false
      # Disable log receiver if not needed
      - SW_RECEIVER_LOG=false
      # Optimize storage settings
      - SW_STORAGE_ES_BULK_ACTIONS=5000
      - SW_STORAGE_ES_BULK_SIZE=20
      - SW_STORAGE_ES_FLUSH_INTERVAL=5
      # Reduce data retention for metrics (keep traces longer)
      - SW_CORE_RECORD_DATA_TTL=1
      - SW_CORE_METRICS_DATA_TTL=1
      - SW_CORE_TRACE_DATA_TTL=7
    restart: always
    ports:
      - '12800:12800'
      - '11800:11800'
    networks:
      - monitoring-net
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./config/spring-alert-rules.yaml:/etc/prometheus/rules/spring-alert-rules.yaml:ro
    ports:
      - '9090:9090'
    networks:
      - monitoring-net
    depends_on:
      - spring-app-elastic
      - spring-app-skywalking
      - alertmanager

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - '9093:9093'
    networks:
      - monitoring-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring-net
    depends_on:
      - prometheus

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.18
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - '5601:5601'
    networks:
      - monitoring-net
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.18
    container_name: filebeat
    user: root
    command:
      ['--strict.perms=false', '-e', '-c', '/usr/share/filebeat/filebeat.yml']
    volumes:
      - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring-net
    depends_on:
      - elasticsearch
      - spring-app-elastic
      - spring-app-skywalking

volumes:
  mysqldata:
  grafana-data:

networks:
  monitoring-net:
    driver: bridge
